#include "msp430.h"                     ; #define controlled include file

        NAME    main                    ; module name

        PUBLIC  main                    ; make the main label vissible
                                        ; outside this module
        ORG     0FFFEh
        DC16    init                    ; set reset vector to 'init' label

        RSEG    CSTACK                  ; pre-declaration of segment
        RSEG    CODE                    ; place program in 'CODE' segment

init:   MOV     #SFE(CSTACK), SP        ; set up stack

main:   NOP                             ; main program
        MOV.W   #WDTPW+WDTHOLD,&WDTCTL  ; Stop watchdog timer
        
        MOV     #0,R4                   ; Coloca 0 no R4
        MOV     #1,R5                   ; Coloca 1 no R5
Soma
        ADD     R5,R4                   ; Soma o R5 ao R4
        CMP     R4,1000                 ; Compara o R4 com 1000
        JGE     Teste_Igual             ; Se R4 maior ou igual a 1000 pula para Teste_Igual
Ímpar        
        ADD     2,R5                    ; Adiciona 2 ao R5
        JMP     Soma                    ; Pula para Soma
Teste_Igual
        JZ      Ímpar                   ; Se zero no flag Z pula para Ímpar
        
        JMP $                           ; jump to current location '$'
                                        ; (endless loop)
        END
